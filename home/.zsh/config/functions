# Rails console
ccred=$(echo -e "\033[0;31m")
ccyellow=$(echo -e "\033[0;33m")
ccend=$(echo -e "\033[0m")

# Rails server
rs() {
  if [[ -d public/assets ]]; then
echo "${ccred}====================="
    echo "PUBLIC ASSETS EXISTS!"
    echo "=====================${ccend}"
  fi
#rm -rf tmp/cache
bundle
bundle exec rails s -b 0.0.0.0
}

# git cherry-pick from branch to another branch by using a commit hash
gitc() {
  if [ "$1" ] && [ "$2" ]; then
    echo "using branch_name: $1"
    echo "using commit_hash: $2"

    branch_name="$1"
    commit_hash="$2"

    echo "checkout branch..."
    git checkout $branch_name

    echo "cherry-pick"
    git cherry-pick $commit_hash

    echo "push..."
    gp
    echo "done!"
    git co master
  else
    echo "############## USAGE ###############"
    echo "gitc <branch_name> <commit_hash>"
  fi
}

git_prune() {
  git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D
}

gp() {
  BRANCH_NAME=$(git symbolic-ref --short HEAD)
  if ! [[ $(git status | grep 'origin') ]]
  then
    echo 'setting up remote stream' && git push --set-upstream origin $BRANCH_NAME
  fi  
  echo 'pull changes...' && gpr
  echo 'push changes' && git push
}

# bundle
b() {
  bundle "$@"
}

# share local files via network
share() {
  echo "SERVING `pwd` ON http://`ifconfig -v en4 inet | grep inet | cut -d " " -f 2`:9090/" && ruby -r webrick -e "s = WEBrick::HTTPServer.new(:Port => 9090, :DocumentRoot => Dir.pwd); trap(\"INT\") { s.shutdown }; s.start"  
}

# run rubocop only for changed files
rubocop() {
  git ls-files -m | xargs ls -1 2>/dev/null | grep '\.rb$' | xargs bin/rubocop "$@"
}
