# Rails console
ccred=$(echo -e "\033[0;31m")
ccyellow=$(echo -e "\033[0;33m")
ccend=$(echo -e "\033[0m")

rc() { bundle exec rails c }

# Rails server
rs() {
  if [[ -d public/assets ]]; then
echo "${ccred}====================="
    echo "PUBLIC ASSETS EXISTS!"
    echo "=====================${ccend}"
  fi
rm -rf tmp/cache
bundle exec rails s
}

catcher() {
  grep -q -e "catcher.*path" Gemfile
  if [ "$?" -eq "1" ]; then
    sed -i "" "s/catcher\(.*\)/catcher\1, :path => '..\/catcher'/" Gemfile
    echo "LOCAL CATCHER"
  else
    sed -i "" "s/catcher\(.*\), :path.*/catcher\1/" Gemfile
    echo "GEM CATCHER"
  fi
  bundle
}

# ps + grep
psg() { ps auxww | grep $1 }

# Create gemset (in .rvmrc) with directory name here
rvm_here() {
  if [ ! -f .rvmrc ]; then
    ruby=`rvm current | cut -d "@" -f 1`
    here=`pwd`
    gemset=`basename $(pwd)`
    echo "rvm --create $ruby@$gemset" >> .rvmrc
    cd .
  else
    echo ".rvmrc already exists"
  fi

  # gitignore
  if [ -d .git ]; then
    echo ".rvmrc" >> .gitignore
  fi
}

# Start pry (and load rails if available)
p() {
  if [ -f ./config/environment.rb ]; then
    pry -r ./config/environment -r ~/.zsh/modules/pry/rails.rb $1 $2 $3
  elif [ -f ./*.gemspec ]; then
    gem=`ls *.gemspec | cut -d "." -f 1`
    echo "Starting PRY with gem '$gem'"
    pry -r ./lib/$gem.rb $1 $2 $3
  else
    pry
  fi
}

b() {
  bundle "$@"
}

# rename *.txt txt t2t
# a.txt => a.t2t
rename() {
  for f in $1; do 
    mv "$f" "${f%$2}$3"
  done
}

f() {
  find . -name "$1" | grep -v ".svn"
}

#
# quick SVN switch branch
#
switch() {
  project_name=`svn info | grep URL | cut -d "/" -f 4`

  if [[ "$0" != "0" ]]; then
    echo "================="
    echo "Not a SVN project"
    echo "================="
    return
  fi

  clean=$(svn status | wc -l)

  if [[ "$clean" -gt "0" ]]; then
    echo "=================================================================================="
    echo "The current active branch isn't clean. Commit or revert before switching branches."
    echo "=================================================================================="
    return
  fi

  branch=$1
  if [[ $branch == "" ]]; then
    branch="trunk"
  else
    branch="branches/$branch"
  fi

  echo "switching '$project_name' to $branch"

  svn switch --ignore-ancestry svn://svn/$project_name/$branch
}

prod() {
  ssh guest@$1$2.prod.blau.de
}
